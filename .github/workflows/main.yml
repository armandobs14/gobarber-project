name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: log untrusted output
      run: |

        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"

        echo "untrusted output"

        echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"
        
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.3
      with:
         node-version: 14.x
    
    # Criar cache do yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    # Instalar as dependencias NPM/YARN
    - name: Install dependencies
      run: yarn

    # Executar a build
    - name: Run build
      run: yarn build
     
    # Copiar c√≥digo para dentro da Digital Ocean
    - name: Copy dist to Digital Ocean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        source: ".,!node_modules"
        target: "~/app/orusbarber-backend"
      
     # Executar yarn na Digital Ocean
    - name: Run production scripts
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: cd ~/app/orusbarber-backend && yarn && ./node_modules/.bin/typeorm migration:run && pm2 restart orusbarber-api
